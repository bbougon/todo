diff --git a/application/autoload_classmap.php b/application/autoload_classmap.php
index f15620b..910b0bc 100644
--- a/application/autoload_classmap.php
+++ b/application/autoload_classmap.php
@@ -1,7 +1,8 @@
 <?php
 // Generated by ZF2's ./bin/classmap_generator.php
 return array(
-    'ErrorController' => __DIR__ . '/controllers/ErrorController.php',
-    'TodosController' => __DIR__ . '/controllers/TodosController.php',
-    'Bootstrap'       => __DIR__ . '/Bootstrap.php',
+    'ErrorController'             => __DIR__ . '/controllers/ErrorController.php',
+    'TodosController'             => __DIR__ . '/controllers/TodosController.php',
+    'Zend_View_Helper_DateFormat' => __DIR__ . '/views/helpers/DateFormat.php',
+    'Bootstrap'                   => __DIR__ . '/Bootstrap.php',
 );
diff --git a/application/controllers/TodosController.php b/application/controllers/TodosController.php
index f1ea703..32e639a 100644
--- a/application/controllers/TodosController.php
+++ b/application/controllers/TodosController.php
@@ -23,4 +23,37 @@ class TodosController extends BaseController
         }
         $this->redirect('/todos');
     }
+
+    public function reorderAction()
+    {
+        $this->_helper->layout->disableLayout();
+        $this->_helper->viewRenderer->setNoRender(true);
+        
+        if (!$this->hasParam('id')) {
+            return $this->notFound();
+        }
+        $todo = Repositories::todos()->getById($this->getParam('id'));
+        if ($todo === null) {
+            return $this->notFound();
+        }
+        
+        if (!$this->hasParam('ordering')) {
+            return $this->badRequest();
+        }
+        $newOrdering = $this->getParam('ordering');
+        
+        if ($newOrdering < $todo->getOrdering()) {
+            $todosToReorder = Repositories::todos()->getAllBetween($newOrdering, $todo->getOrdering() - 1);
+            foreach ($todosToReorder as $todoToReorder) {
+                Repositories::todos()->update($todoToReorder->incrementOrdering());
+            }
+        } else {
+            $todosToReorder = Repositories::todos()->getAllBetween($todo->getOrdering() + 1, $newOrdering);
+            foreach ($todosToReorder as $todoToReorder) {
+                Repositories::todos()->update($todoToReorder->decrementOrdering());
+            }
+        }
+        
+        Repositories::todos()->update($todo->setOrdering($newOrdering));
+    }
 }
diff --git a/application/data/schema.sql b/application/data/schema.sql
index f822911..a293336 100644
--- a/application/data/schema.sql
+++ b/application/data/schema.sql
@@ -1,6 +1,7 @@
 DROP TABLE IF EXISTS `todos`;
 CREATE TABLE `todos` (
   `id` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
+  `ordering` INTEGER,
   `description` TEXT NOT NULL DEFAULT '',
   `created_at` DATETIME
 );
diff --git a/application/views/layouts/scripts/layout.phtml b/application/views/layouts/scripts/layout.phtml
index 944d53c..f444156 100644
--- a/application/views/layouts/scripts/layout.phtml
+++ b/application/views/layouts/scripts/layout.phtml
@@ -6,15 +6,16 @@
 	<meta charset="utf-8" />
 	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
 	<?php echo $this->headLink(); ?>
+	<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
+	<script src="http://code.jquery.com/jquery-1.9.1.js"></script>
+	<script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
 </head>
 <body>
-<div id="page">
 	<header>
 		<div id="logo">TODO</div>
 	</header>
 	<div id="content">
-<?php echo $this->layout()->content ?>
+<?php echo $this->layout()->content?>
 	</div>
-</div>
 </body>
 </html>
diff --git a/application/views/scripts/todos/index.phtml b/application/views/scripts/todos/index.phtml
index 37119ae..91a5225 100644
--- a/application/views/scripts/todos/index.phtml
+++ b/application/views/scripts/todos/index.phtml
@@ -11,10 +11,20 @@
     </thead>
     <tbody>
 <?php foreach ($this->todos as $todo): ?>
-        <tr>
+        <tr data-id="<?php echo $todo->getId(); ?>">
             <td><?php echo $this->escape($todo->getDescription()); ?></td>
             <td><?php echo $this->dateFormat($todo->getCreatedAt()); ?></td>
         </tr>
 <?php endforeach; ?>
     </tbody>
-</table>
\ No newline at end of file
+</table>
+<script>
+$(function() {
+    $("tbody").sortable({
+        update: function(event, ui) {
+            $.post('/todos/reorder', {'id': ui.item.attr('data-id'), 'ordering': ui.item.index()});
+        }
+    });
+    $("tbody").disableSelection();
+});
+</script>
\ No newline at end of file
diff --git a/library/Todo/Infrastructure/ZendDbTodoRepository.php b/library/Todo/Infrastructure/ZendDbTodoRepository.php
index beb2ec7..3c57d2c 100644
--- a/library/Todo/Infrastructure/ZendDbTodoRepository.php
+++ b/library/Todo/Infrastructure/ZendDbTodoRepository.php
@@ -2,11 +2,35 @@
 namespace Todo\Infrastructure;
 
 use Todo\Model\Todo;
+use Todo\Model\TodoRepository;
 
-class ZendDbTodoRepository extends ZendDbRepository
+class ZendDbTodoRepository extends ZendDbRepository implements TodoRepository
 {
     const SQL_DATE_FORMAT = 'Y-m-d H:i:s';
 
+    public function getAll()
+    {
+        $select = $this->_getSelect()->order($this->_tableAlias() . '.ordering');
+        return $this->_getAllFromSelect($select);
+    }
+
+    public function getAllBetween($firstPosition, $lastPosition)
+    {
+        $select = $this->_getSelect()->where('t.ordering >= ?', $firstPosition)->where('t.ordering <= ?', $lastPosition);
+        return $this->_getAllFromSelect($select);
+    }
+
+    public function add($entity)
+    {
+        if ($entity->getOrdering() === null) {
+            $select = $this->getDb()->select()->from($this->_tableName(), array(
+                'max' => 'MAX(ordering)'
+            ));
+            $entity->setOrdering($this->getDb()->fetchOne($select) + 1);
+        }
+        parent::add($entity);
+    }
+
     protected function _tableName()
     {
         return 'todos';
@@ -21,6 +45,7 @@ class ZendDbTodoRepository extends ZendDbRepository
     {
         $entity = new Todo($sqlRow['description']);
         $entity->setId($sqlRow['id']);
+        $entity->setOrdering($sqlRow['ordering']);
         $entity->setCreatedAt(new \DateTime($sqlRow['created_at']));
         return $entity;
     }
@@ -30,6 +55,7 @@ class ZendDbTodoRepository extends ZendDbRepository
         return array(
             'id' => $entity->getId(), 
             'description' => $entity->getDescription(), 
+            'ordering' => $entity->getOrdering(), 
             'created_at' => $entity->getCreatedAt()->format(self::SQL_DATE_FORMAT)
         );
     }
diff --git a/library/Todo/Model/Todo.php b/library/Todo/Model/Todo.php
index 77b82a9..48dd9c1 100644
--- a/library/Todo/Model/Todo.php
+++ b/library/Todo/Model/Todo.php
@@ -6,6 +6,7 @@ class Todo
     private $id;
     private $description;
     private $createdAt;
+    private $ordering;
 
     public function __construct($description = null)
     {
@@ -21,6 +22,7 @@ class Todo
     public function setId($id)
     {
         $this->id = $id;
+        return $this;
     }
 
     public function getDescription()
@@ -31,6 +33,7 @@ class Todo
     public function setDescription($description)
     {
         $this->description = $description;
+        return $this;
     }
 
     public function getCreatedAt()
@@ -41,5 +44,29 @@ class Todo
     public function setCreatedAt($createdAt)
     {
         $this->createdAt = $createdAt;
+        return $this;
+    }
+
+    public function getOrdering()
+    {
+        return $this->ordering;
+    }
+
+    public function setOrdering($ordering)
+    {
+        $this->ordering = $ordering;
+        return $this;
+    }
+
+    public function incrementOrdering($step = 1)
+    {
+        $this->setOrdering($this->getOrdering() + $step);
+        return $this;
+    }
+
+    public function decrementOrdering($step = 1)
+    {
+        $this->setOrdering($this->getOrdering() - $step);
+        return $this;
     }
 }
\ No newline at end of file
diff --git a/library/Todo/Model/TodoRepository.php b/library/Todo/Model/TodoRepository.php
new file mode 100644
index 0000000..97e9650
--- /dev/null
+++ b/library/Todo/Model/TodoRepository.php
@@ -0,0 +1,7 @@
+<?php
+namespace Todo\Model;
+
+interface TodoRepository
+{
+    public function getAllBetween($firstPosition, $lastPosition);
+}
diff --git a/library/autoload_classmap.php b/library/autoload_classmap.php
index 2466692..ba2f046 100644
--- a/library/autoload_classmap.php
+++ b/library/autoload_classmap.php
@@ -4,6 +4,7 @@ return array(
     'Todo\Model\Repositories'                  => __DIR__ . '/Todo/Model/Repositories.php',
     'Todo\Model\Todo'                          => __DIR__ . '/Todo/Model/Todo.php',
     'Todo\Model\Repository'                    => __DIR__ . '/Todo/Model/Repository.php',
+    'Todo\Model\TodoRepository'                => __DIR__ . '/Todo/Model/TodoRepository.php',
     'Todo\Infrastructure\ZendDbRepository'     => __DIR__ . '/Todo/Infrastructure/ZendDbRepository.php',
     'Todo\Infrastructure\ZendDbRepositories'   => __DIR__ . '/Todo/Infrastructure/ZendDbRepositories.php',
     'Todo\Infrastructure\ZendDbTodoRepository' => __DIR__ . '/Todo/Infrastructure/ZendDbTodoRepository.php',
